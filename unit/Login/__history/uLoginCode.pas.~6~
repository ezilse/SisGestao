unit uLoginCode;

interface

uses
  Data.DB, ZAbstractRODataset, ZAbstractDataset, ZDataset;

  function TesteLogin(pLogin,pSenha:String):Boolean;

implementation

uses
  uDados;

function TesteLogin(pLogin,pSenha:String):Boolean;
var
  zqLogin:TZQuery;
  vContaLog,vIdLogin:Integer;
begin
  zqLogin :=  TZQuery.Create(nil);
  with zqLogin do
  begin
    Connection  :=  dm.conPrin;
    if Active then
      Close;
    SQL.Clear;
    SQL.Add('SELECT * FROM TB_LOGIN WHERE LOGIN = :LOGIN AND SENHA = CRIPTOGRAFIA(:SENHA)');
    ParamByName('LOGIN').AsString :=  pLogin;
    ParamByName('SENHA').AsString :=  pSenha;
    Open; First; FetchAll;
    vIdLogin  :=  Fields[0].AsInteger;
    vContaLog :=  Fields[0].AsInteger;
    if (vContaLog >= 1) then
    begin
      Result  :=  True;
      SQL.Clear;
      SQL.Add('INSERT INTO TB_LOG (ID_USER,DS_ACAO) VALUES (:ID,:ACAO)');
      ParamByName('ID_USER').AsInteger  :=  vIdLogin;
      ParamByName('ACAO').AsString      :=  'USUÁRIO ' + pLogin + ' REALIZOU LOGIN NO SISTEMA';
      ExecSQL;
    end;
  end;
  freean
end;

end.
